@page "/Test"
@implements IDisposable
@using tester.Data
@using tester.Data.Services
@inject SessionDataService SessionData
@inject NavigationManager NavManager
@inject TestsDbService TestDbService;
@inject TestSessionsService TestSessionsService;
@inject HttpClient HttpClient;

@if (!SessionData.IsTestActive)
{
    NavManager.NavigateTo("/");
}
else
{
    <h3 class="title">Вопрос @SessionData.QuestionIndex</h3>
    <div>
        @QuestionFragment
    </div>
}

@code {
    
    private RenderFragment QuestionFragment { get; set; }

    private Session _session = new Session();
    
    protected override void OnParametersSet()
    {
        QuestionFragment = ShowDynamicComponent();

        if (HttpClient.BaseAddress is not null) _session.IpAddress = HttpClient.BaseAddress.Authority;
        _session.NameSurname = SessionData.NameSurname;
        _session.QuestionIndex = 0;
        _session.TestName = SessionData.UserTest.Name;
        
        TestSessionsService.Sessions.Add(_session);
        
        base.OnParametersSet();
    }

    private void NextQuestion(bool success)
    {
        if (success) SessionData.CorrectAnswers += 1;
        SessionData.QuestionIndex += 1;
        _session.QuestionIndex = SessionData.QuestionIndex;
        if (SessionData.UserTest.Questions.Count <= SessionData.QuestionIndex)
        {
            NavManager.NavigateTo("/Results");
            return;
        }
        QuestionFragment = ShowDynamicComponent();
    }
    
    private RenderFragment ShowDynamicComponent() => builder =>
    {
        if (SessionData.UserTest.Questions.Count <= SessionData.QuestionIndex)
        {
            return;
        }
        //об EventCallback.Factory написано здесь https://stackoverflow.com/questions/59816177/set-eventcallbackstring-outside-of-a-blazor-componet
        builder.OpenComponent(0, SessionData.UserTest.Questions[SessionData.QuestionIndex].GetViewType());
        builder.AddAttribute(1, "Model", SessionData.UserTest.Questions[SessionData.QuestionIndex]);
        builder.AddAttribute(2, "OnContinue", EventCallback.Factory.Create(this, (bool x) => NextQuestion(x)));
        builder.CloseComponent();
        //комментарии к подобному коду находятся в QuestionCreator.razor
    };

    public void Dispose()
    {
        HttpClient?.Dispose();
        TestSessionsService.Sessions.Remove(_session);
    }

}
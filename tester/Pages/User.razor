@page "/User"
@using tester.Data
@using tester.Data.Services
@inject SessionDataService _session
@inject TestsDbService _testsDbService;
@inject NavigationManager _navManager
<h3 class="title">*потом придумаю, что тут написать*</h3>
<h3 class="subtitle">Для запуска теста нажмите кнопку "Начать"</h3>
<article class="message">
  <div class="message-body">
    Закрытие окна или его обновление приведет к сбросу сессии, к ней нельзя будет вернуться.
  </div>
</article>

<button @onclick="OpenEntrance" class="button is-success is-center is-large mt-6">Начать</button>

@{
    if (EntranceOpened)
    {
        <div class="modal is-active">
            <div class="modal-background"></div>
            <div class="modal-card">
                <header class="modal-card-head">
                    <p class="modal-card-title">Для продолжения введите данные</p>
                    <button @onclick="CloseEntrance" class="delete" aria-label="close"></button>
                </header>
                <section class="modal-card-body">
                    <div class="field">
                      <label class="label">Имя и фамилия</label>
                        <div class="control">
                            <input @bind:event="oninput" @bind="Name" class="input @(Name == "" ? "is-danger" : "")"  type="text"
                                    placeholder="Вася Пупкин">
                        </div>
                        @{
                            if (Name == "")
                            {
                                <p class="help is-danger">
                                    Необходимо хоть что-нибудь ввести
                                </p>
                            }
}
                        <p class="block">Помните, что время и IP сессии сохраняются.</p>
                    </div>
                </section>
                <footer class="modal-card-foot">
                    <button @onclick="Continue" disabled="@(Name=="")" class="button is-success">Начать</button>
                    <button @onclick="CloseEntrance" class="button">Отмена</button>
                </footer>
            </div>
        </div>
    }
}
@code {
    //Modal
    public bool EntranceOpened = false;
    private string _name = "";
    public void OpenEntrance() => EntranceOpened = true;
    public void CloseEntrance() => EntranceOpened = false;
    //Modal

    protected override Task OnParametersSetAsync()
    {
        if(_session.IsTestActive) _navManager.NavigateTo("/Test");
        return base.OnParametersSetAsync();
    }

    public string Name
    {
        get => _name;
        set { _name = value; StateHasChanged();}
    }

    private void Continue()
    {
        if (Name == "") return;

        _session.NameSurname = Name;
        _session.IsTestActive = true; //It is the only place where IsTestActive can be made true
        _navManager.NavigateTo("/Test");
        _session.UserTest = _testsDbService.ActiveTest;
    }

}